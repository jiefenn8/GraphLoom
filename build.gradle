/*
 *    Copyright (c) 2019 - Javen Liu (github.com/jiefenn8)
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

plugins {
    id 'idea'
    id 'java-library'
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.8.4'
    id 'jacoco'
}

group = 'com.github.jiefenn8.graphloom'
description = 'GraphLoom semantic graph mapping library core API and implementation.'
archivesBaseName = 'graphloom-core'

version = '0.3.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

sourceSets {
    integrationTest {
        java{
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

task integrationTest(type: Test){
    description = 'Runs integration tests.'
    group = 'verification'

    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}

task integTestReport(type :JacocoReport){
    sourceSets sourceSets.main
    executionData integrationTest
    reports {
        xml.enabled true
        html.enabled false
    }
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntimeOnly.extendsFrom runtimeOnly
}

idea {
    module {
        testSourceDirs += project.sourceSets.integrationTest.java.srcDirs
        testSourceDirs += project.sourceSets.integrationTest.resources.srcDirs
    }
}

dependencies {
    //Test
    testImplementation group: 'junit', name: 'junit', version: '4.12'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '2.11.0'
    testImplementation group: 'org.hamcrest', name: 'java-hamcrest', version: '2.0.0.0'
    testImplementation group: 'pl.pragmatists', name: 'JUnitParams', version: '1.1.1'

    //Logging
    implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.11.0'
    implementation group: 'org.slf4j', name: 'slf4j-jdk14', version: '1.7.25'

    //Core
    implementation group: 'org.apache.jena', name: 'jena-core', version: '3.5.0'

    //Utils
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
    implementation group: 'com.google.guava', name: 'guava', version: '28.1-jre'
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

check.dependsOn jacocoTestReport
integrationTest.finalizedBy integTestReport

publishing {
    publications {
        GraphLoom(MavenPublication) {
            from components.java
            groupId = project.group
            artifactId = project.archivesBaseName
            version = project.version
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_API_KEY')
    pkg {
        repo = 'graphloom'
        name = project.name
        userOrg = 'jiefenn8'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/jiefenn8/graphloom.git'

        version {
            name = project.version
            desc = project.description
            released = new Date()
            vcsTag = 'v' + project.version
        }
    }

    publications = ['GraphLoom']
}
