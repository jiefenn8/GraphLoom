/*
 *    Copyright (c) 2019 - Javen Liu (github.com/jiefenn8)
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

plugins {
    id 'idea'
    id 'java-library'
    id 'maven-publish'
    id 'jacoco'
}

group = 'com.github.jiefenn8.graphloom'
description = 'GraphLoom semantic graph mapping library core API and implementation.'
archivesBaseName = 'graphloom-core'

version = '0.5.0-SNAPSHOT'

sourceCompatibility = 1.15
targetCompatibility = 1.15

repositories {
    mavenCentral()
}

sourceSets {
    integrationTest {
        java{
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier.set('sources')
}

javadoc {
    // without the -quiet option, the build fails
    options.addStringOption('Xdoclint:none', '-quiet')
}

task javadocJar(type: Jar) {
    from javadoc

    archiveClassifier.set('javadoc')
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

task integrationTest(type: Test){
    description = 'Runs integration tests.'
    group = 'verification'

    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}

task integTestReport(type :JacocoReport){
    sourceSets sourceSets.main
    executionData integrationTest
    reports {
        xml.enabled true
        html.enabled false
    }
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntimeOnly.extendsFrom runtimeOnly
}

idea {
    module {
        testSourceDirs += project.sourceSets.integrationTest.java.srcDirs
        testSourceDirs += project.sourceSets.integrationTest.resources.srcDirs
    }
}

dependencies {
    //Test
    testImplementation group: 'junit', name: 'junit', version: '4.13'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.7.7'
    testImplementation group: 'org.hamcrest', name: 'hamcrest', version: '2.2'
    testImplementation group: 'pl.pragmatists', name: 'JUnitParams', version: '1.1.1'
    testImplementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.30'

    //Logging
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.30'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'

    //Core
    api group: 'org.apache.jena', name: 'jena-core', version: '3.5.0'

    //Utils
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

check.dependsOn jacocoTestReport
integrationTest.finalizedBy integTestReport
